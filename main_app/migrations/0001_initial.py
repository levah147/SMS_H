# Generated by Django 5.1.5 on 2025-03-20 17:03

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import main_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('is_present', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=60)),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=60)),
                ('message', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ca_test1', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)])),
                ('ca_test2', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('exam_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('total_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResultSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('days_in_term', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('resumption_date', models.DateField(blank=True, null=True)),
                ('total_score', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('average_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('position', models.IntegerField(default=0)),
                ('grade', models.CharField(default='F', max_length=2)),
                ('teacher_remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.DateField()),
                ('end_year', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('1', 'HOD'), ('2', 'Staff'), ('3', 'Student')], default='1', max_length=1)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('address', models.TextField()),
                ('fcm_token', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', main_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUserProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Custom User',
                'verbose_name_plural': 'Custom Users',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.customuser',),
            managers=[
                ('objects', main_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendances',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.attendance',),
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.attendance')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceReportProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Attendance Report',
                'verbose_name_plural': 'Attendance Reports',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.attendancereport',),
        ),
        migrations.CreateModel(
            name='FeedbackStaffProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Feedback (Staff)',
                'verbose_name_plural': 'Feedback (Staff)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.feedbackstaff',),
        ),
        migrations.CreateModel(
            name='FeedbackStudentProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Feedback (Student)',
                'verbose_name_plural': 'Feedback (Student)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.feedbackstudent',),
        ),
        migrations.CreateModel(
            name='LeaveReportStaffProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Leave Report (Staff)',
                'verbose_name_plural': 'Leave Reports (Staff)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.leavereportstaff',),
        ),
        migrations.CreateModel(
            name='LeaveReportStudentProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Leave Report (Student)',
                'verbose_name_plural': 'Leave Reports (Student)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.leavereportstudent',),
        ),
        migrations.CreateModel(
            name='NotificationStaffProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Notification (Staff)',
                'verbose_name_plural': 'Notifications (Staff)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.notificationstaff',),
        ),
        migrations.CreateModel(
            name='NotificationStudentProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Notification (Student)',
                'verbose_name_plural': 'Notifications (Student)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.notificationstudent',),
        ),
        migrations.CreateModel(
            name='ProgramProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Programs',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.program',),
        ),
        migrations.CreateModel(
            name='ResultProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Result',
                'verbose_name_plural': 'Results',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.result',),
        ),
        migrations.CreateModel(
            name='ResultSummaryProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Result Summary',
                'verbose_name_plural': 'Result Summaries',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.resultsummary',),
        ),
        migrations.AddField(
            model_name='attendance',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.session'),
        ),
        migrations.CreateModel(
            name='SessionProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.session',),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.program')),
            ],
        ),
        migrations.AddField(
            model_name='notificationstaff',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff'),
        ),
        migrations.AddField(
            model_name='leavereportstaff',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff'),
        ),
        migrations.AddField(
            model_name='feedbackstaff',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff'),
        ),
        migrations.CreateModel(
            name='StaffProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staff',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.staff',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.program')),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.session')),
            ],
        ),
        migrations.CreateModel(
            name='SessionResultSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('average_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('grade', models.CharField(default='F', max_length=2)),
                ('teacher_remarks', models.TextField(blank=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student')),
            ],
        ),
        migrations.AddField(
            model_name='resultsummary',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student'),
        ),
        migrations.AddField(
            model_name='result',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student'),
        ),
        migrations.AddField(
            model_name='notificationstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student'),
        ),
        migrations.AddField(
            model_name='leavereportstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student'),
        ),
        migrations.AddField(
            model_name='feedbackstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.student'),
        ),
        migrations.AddField(
            model_name='attendancereport',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main_app.student'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.student'),
        ),
        migrations.CreateModel(
            name='StudentProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.student',),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.program')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.staff')),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject'),
        ),
        migrations.CreateModel(
            name='SubjectProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.subject',),
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('1st', '1st Term'), ('2nd', '2nd Term'), ('3rd', '3rd Term')], max_length=10)),
                ('days_in_term', models.PositiveIntegerField(default=0)),
                ('resumption_date', models.DateField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='main_app.session')),
            ],
            options={
                'unique_together': {('session', 'name')},
            },
        ),
        migrations.AddField(
            model_name='resultsummary',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.term'),
        ),
        migrations.AddField(
            model_name='result',
            name='term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.term'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.term'),
        ),
        migrations.CreateModel(
            name='TermProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main_app.term',),
        ),
        migrations.AlterUniqueTogether(
            name='resultsummary',
            unique_together={('student', 'term')},
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together={('student', 'subject', 'term')},
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('student', 'session', 'term', 'date')},
        ),
    ]
